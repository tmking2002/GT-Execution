library(randomForest)
library(softballR)
library(combinat)
gt_stats <- load_ncaa_softball_playerbox(2024, "Hitting") %>%
filter(team == "Georgia Tech") %>%
separate(player, c("last", "first"), sep = ", ") %>%
mutate(player = paste(first, last)) %>%
group_by(player) %>%
summarise(ab = sum(ab),
avg = sum(h) / sum(ab),
obp = (sum(h) + sum(bb) + sum(hbp)) / (sum(ab) + sum(h) + sum(bb) + sum(hbp) + sum(sf) + sum(sh)),
slg = sum(tb) / sum(ab),
ops = obp + slg,
k_rate = sum(k) / sum(ab),
sb_rate = sum(sb) / (sum(h) + sum(bb) + sum(hbp))) %>%
ungroup() %>%
filter(ab >= 10)
write_csv(gt_stats %>% select(ab, player, ops, obp), "~/Projects/GT-Softball/data_dashboard/hitting_stats.csv")
View(gt_stats)
View(gt_stats)
lineup_1 <- c("Ella Edgmon", "Abby Hughes", "Mallorie Black", "Tiffany Domingue", "Sara Beth Allen", "Gracie Hillman", "Emma Minghini", "Jin Sileo")
test_1 <- test_lineup(lineup_1)
pbp <- read_csv("~/Projects/lineup_generator_tool/d1_pbp_2023_final.csv")
pbp_upd <- pbp %>%
group_by(game_id...3, team) %>%
mutate(order_num = row_number(),
order_num = order_num %% 9,
order_num = ifelse(order_num == 0, 9, order_num)) %>%
ungroup() %>%
separate(hitter, c("name_1", "name_2"), sep = "\\.|,") %>%
mutate(last_name = trimws(ifelse(str_length(name_1) != 1, name_1, name_2)),
first_name = substr(trimws(ifelse(str_length(name_1) == 1, name_1, name_2)), 1, 1),
first_name = ifelse(is.na(first_name), "", first_name),
player = trimws(str_to_title(paste(first_name, last_name))),
game_id = game_id...3) %>%
select(game_id, team, runs_scored, order_num, player)
lineups <- data.frame()
for(i in 1:(length(unique(pbp_upd$game_id)))){
cur_pbp <- pbp_upd %>%
filter(game_id == unique(pbp_upd$game_id)[i])
team_1 <- unique(cur_pbp$team)[1]
team_2 <- unique(cur_pbp$team)[2]
team1_runs <- cur_pbp %>% filter(team == team_1) %>% summarise(runs = sum(runs_scored), .groups = 'drop_last') %>% pull(runs)
team2_runs <- cur_pbp %>% filter(team == team_2) %>% summarise(runs = sum(runs_scored), .groups = 'drop_last') %>% pull(runs)
starters <- cur_pbp %>%
group_by(team, order_num) %>%
summarise(player = first(player), .groups = 'drop_last') %>%
ungroup() %>%
left_join(stats, by = c("player", "team"))
if(nrow(starters) != 18){next}
cur_lineup_1 <- data.frame(
game_id = unique(pbp_upd$game_id)[i],
team = team_1,
runs = team1_runs,
player1_obp = starters %>% filter(team == team_1 & order_num == 1) %>% pull(obp),
player2_obp = starters %>% filter(team == team_1 & order_num == 2) %>% pull(obp),
player3_obp = starters %>% filter(team == team_1 & order_num == 3) %>% pull(obp),
player4_obp = starters %>% filter(team == team_1 & order_num == 4) %>% pull(obp),
player5_obp = starters %>% filter(team == team_1 & order_num == 5) %>% pull(obp),
player6_obp = starters %>% filter(team == team_1 & order_num == 6) %>% pull(obp),
player7_obp = starters %>% filter(team == team_1 & order_num == 7) %>% pull(obp),
player8_obp = starters %>% filter(team == team_1 & order_num == 8) %>% pull(obp),
player9_obp = starters %>% filter(team == team_1 & order_num == 9) %>% pull(obp),
player1_slg = starters %>% filter(team == team_1 & order_num == 1) %>% pull(slg),
player2_slg = starters %>% filter(team == team_1 & order_num == 2) %>% pull(slg),
player3_slg = starters %>% filter(team == team_1 & order_num == 3) %>% pull(slg),
player4_slg = starters %>% filter(team == team_1 & order_num == 4) %>% pull(slg),
player5_slg = starters %>% filter(team == team_1 & order_num == 5) %>% pull(slg),
player6_slg = starters %>% filter(team == team_1 & order_num == 6) %>% pull(slg),
player7_slg = starters %>% filter(team == team_1 & order_num == 7) %>% pull(slg),
player8_slg = starters %>% filter(team == team_1 & order_num == 8) %>% pull(slg),
player9_slg = starters %>% filter(team == team_1 & order_num == 9) %>% pull(slg),
player1_k_rate = starters %>% filter(team == team_1 & order_num == 1) %>% pull(k_rate),
player2_k_rate = starters %>% filter(team == team_1 & order_num == 2) %>% pull(k_rate),
player3_k_rate = starters %>% filter(team == team_1 & order_num == 3) %>% pull(k_rate),
player4_k_rate = starters %>% filter(team == team_1 & order_num == 4) %>% pull(k_rate),
player5_k_rate = starters %>% filter(team == team_1 & order_num == 5) %>% pull(k_rate),
player6_k_rate = starters %>% filter(team == team_1 & order_num == 6) %>% pull(k_rate),
player7_k_rate = starters %>% filter(team == team_1 & order_num == 7) %>% pull(k_rate),
player8_k_rate = starters %>% filter(team == team_1 & order_num == 8) %>% pull(k_rate),
player9_k_rate = starters %>% filter(team == team_1 & order_num == 9) %>% pull(k_rate),
player1_sb_rate = starters %>% filter(team == team_1 & order_num == 1) %>% pull(sb_rate),
player2_sb_rate = starters %>% filter(team == team_1 & order_num == 2) %>% pull(sb_rate),
player3_sb_rate = starters %>% filter(team == team_1 & order_num == 3) %>% pull(sb_rate),
player4_sb_rate = starters %>% filter(team == team_1 & order_num == 4) %>% pull(sb_rate),
player5_sb_rate = starters %>% filter(team == team_1 & order_num == 5) %>% pull(sb_rate),
player6_sb_rate = starters %>% filter(team == team_1 & order_num == 6) %>% pull(sb_rate),
player7_sb_rate = starters %>% filter(team == team_1 & order_num == 7) %>% pull(sb_rate),
player8_sb_rate = starters %>% filter(team == team_1 & order_num == 8) %>% pull(sb_rate),
player9_sb_rate = starters %>% filter(team == team_1 & order_num == 9) %>% pull(sb_rate)
)
cur_lineup_2 <- data.frame(
game_id = unique(pbp_upd$game_id)[i],
team = team_2,
runs = team2_runs,
player1_obp = starters %>% filter(team == team_2 & order_num == 1) %>% pull(obp),
player2_obp = starters %>% filter(team == team_2 & order_num == 2) %>% pull(obp),
player3_obp = starters %>% filter(team == team_2 & order_num == 3) %>% pull(obp),
player4_obp = starters %>% filter(team == team_2 & order_num == 4) %>% pull(obp),
player5_obp = starters %>% filter(team == team_2 & order_num == 5) %>% pull(obp),
player6_obp = starters %>% filter(team == team_2 & order_num == 6) %>% pull(obp),
player7_obp = starters %>% filter(team == team_2 & order_num == 7) %>% pull(obp),
player8_obp = starters %>% filter(team == team_2 & order_num == 8) %>% pull(obp),
player9_obp = starters %>% filter(team == team_2 & order_num == 9) %>% pull(obp),
player1_slg = starters %>% filter(team == team_2 & order_num == 1) %>% pull(slg),
player2_slg = starters %>% filter(team == team_2 & order_num == 2) %>% pull(slg),
player3_slg = starters %>% filter(team == team_2 & order_num == 3) %>% pull(slg),
player4_slg = starters %>% filter(team == team_2 & order_num == 4) %>% pull(slg),
player5_slg = starters %>% filter(team == team_2 & order_num == 5) %>% pull(slg),
player6_slg = starters %>% filter(team == team_2 & order_num == 6) %>% pull(slg),
player7_slg = starters %>% filter(team == team_2 & order_num == 7) %>% pull(slg),
player8_slg = starters %>% filter(team == team_2 & order_num == 8) %>% pull(slg),
player9_slg = starters %>% filter(team == team_2 & order_num == 9) %>% pull(slg),
player1_k_rate = starters %>% filter(team == team_2 & order_num == 1) %>% pull(k_rate),
player2_k_rate = starters %>% filter(team == team_2 & order_num == 2) %>% pull(k_rate),
player3_k_rate = starters %>% filter(team == team_2 & order_num == 3) %>% pull(k_rate),
player4_k_rate = starters %>% filter(team == team_2 & order_num == 4) %>% pull(k_rate),
player5_k_rate = starters %>% filter(team == team_2 & order_num == 5) %>% pull(k_rate),
player6_k_rate = starters %>% filter(team == team_2 & order_num == 6) %>% pull(k_rate),
player7_k_rate = starters %>% filter(team == team_2 & order_num == 7) %>% pull(k_rate),
player8_k_rate = starters %>% filter(team == team_2 & order_num == 8) %>% pull(k_rate),
player9_k_rate = starters %>% filter(team == team_2 & order_num == 9) %>% pull(k_rate),
player1_sb_rate = starters %>% filter(team == team_2 & order_num == 1) %>% pull(sb_rate),
player2_sb_rate = starters %>% filter(team == team_2 & order_num == 2) %>% pull(sb_rate),
player3_sb_rate = starters %>% filter(team == team_2 & order_num == 3) %>% pull(sb_rate),
player4_sb_rate = starters %>% filter(team == team_2 & order_num == 4) %>% pull(sb_rate),
player5_sb_rate = starters %>% filter(team == team_2 & order_num == 5) %>% pull(sb_rate),
player6_sb_rate = starters %>% filter(team == team_2 & order_num == 6) %>% pull(sb_rate),
player7_sb_rate = starters %>% filter(team == team_2 & order_num == 7) %>% pull(sb_rate),
player8_sb_rate = starters %>% filter(team == team_2 & order_num == 8) %>% pull(sb_rate),
player9_sb_rate = starters %>% filter(team == team_2 & order_num == 9) %>% pull(sb_rate)
)
lineups <- rbind(lineups, cur_lineup_1, cur_lineup_2)
if(i %% 100 == 0){print(i)}
}
model <- readRDS("~/Projects/GT-Softball/optimal_lineup/order_model.RDS")
test_lineup <- function(lineup_vec){
lineup <- data.frame(player = lineup_vec) %>%
merge(gt_stats, by= "player")
order <- c(lineup %>% arrange(desc(obp)) %>% slice(1) %>% pull(player),
lineup %>% arrange(desc(obp)) %>% slice(2) %>% pull(player),
lineup %>% arrange(desc(obp)) %>% slice(3) %>% pull(player),
NA,
NA,
NA,
NA,
NA,
NA)
possible <- permn(lineup %>% arrange(desc(obp)) %>% slice(4:9) %>% pull(player))
runs_expected <- 0
optimal <- NA
for(i in 1:length(possible)){
cur_order <- order
cur_order[4] <- possible[[i]][1]
cur_order[5] <- possible[[i]][2]
cur_order[6] <- possible[[i]][3]
cur_order[7] <- possible[[i]][4]
cur_order[8] <- possible[[i]][5]
cur_order[9] <- possible[[i]][6]
cur_lineup <- data.frame(player = cur_order) %>% mutate(order_num = row_number()) %>% merge(gt_stats, by = "player") %>% arrange(order_num)
final_lineup <- data.frame(player1_obp = cur_lineup[1,] %>% pull(obp),
player2_obp = cur_lineup[2,] %>% pull(obp),
player3_obp = cur_lineup[3,] %>% pull(obp),
player4_obp = cur_lineup[4,] %>% pull(obp),
player5_obp = cur_lineup[5,] %>% pull(obp),
player6_obp = cur_lineup[6,] %>% pull(obp),
player7_obp = cur_lineup[7,] %>% pull(obp),
player8_obp = cur_lineup[8,] %>% pull(obp),
player9_obp = cur_lineup[9,] %>% pull(obp),
player1_slg = cur_lineup[1,] %>% pull(slg),
player2_slg = cur_lineup[2,] %>% pull(slg),
player3_slg = cur_lineup[3,] %>% pull(slg),
player4_slg = cur_lineup[4,] %>% pull(slg),
player5_slg = cur_lineup[5,] %>% pull(slg),
player6_slg = cur_lineup[6,] %>% pull(slg),
player7_slg = cur_lineup[7,] %>% pull(slg),
player8_slg = cur_lineup[8,] %>% pull(slg),
player9_slg = cur_lineup[9,] %>% pull(slg),
player1_k_rate = cur_lineup[1,] %>% pull(k_rate),
player2_k_rate = cur_lineup[2,] %>% pull(k_rate),
player3_k_rate = cur_lineup[3,] %>% pull(k_rate),
player4_k_rate = cur_lineup[4,] %>% pull(k_rate),
player5_k_rate = cur_lineup[5,] %>% pull(k_rate),
player6_k_rate = cur_lineup[6,] %>% pull(k_rate),
player7_k_rate = cur_lineup[7,] %>% pull(k_rate),
player8_k_rate = cur_lineup[8,] %>% pull(k_rate),
player9_k_rate = cur_lineup[9,] %>% pull(k_rate),
player1_sb_rate = cur_lineup[1,] %>% pull(sb_rate),
player2_sb_rate = cur_lineup[2,] %>% pull(sb_rate),
player3_sb_rate = cur_lineup[3,] %>% pull(sb_rate),
player4_sb_rate = cur_lineup[4,] %>% pull(sb_rate),
player5_sb_rate = cur_lineup[5,] %>% pull(sb_rate),
player6_sb_rate = cur_lineup[6,] %>% pull(sb_rate),
player7_sb_rate = cur_lineup[7,] %>% pull(sb_rate),
player8_sb_rate = cur_lineup[8,] %>% pull(sb_rate),
player9_sb_rate = cur_lineup[9,] %>% pull(sb_rate))
predicted <- predict(model, final_lineup , type="response")
if(predicted > runs_expected){
runs_expected <- predicted
optimal <- cur_order
}
if(i %% 100 == 0){print(i)}
}
return(list(runs_expected, optimal))
}
lineup_1 <- c("Ella Edgmon", "Abby Hughes", "Mallorie Black", "Tiffany Domingue", "Sara Beth Allen", "Gracie Hillman", "Emma Minghini", "Jin Sileo")
test_1 <- test_lineup(lineup_1)
lineup_1 <- c("Ella Edgmon", "Abby Hughes", "Mallorie Black", "Tiffany Domingue", "Sara Beth Allen", "Gracie Hillman", "Emma Minghini", "Jin Sileo", "Jayden Gailey")
test_1 <- test_lineup(lineup_1)
runs_expected_1 <- test_1[[1]]
if(max(c(runs_expected_1, runs_expected_2)) == runs_expected_1){
optimal_lineup_final <- test_1[[2]]
} else if(max(c(runs_expected_1, runs_expected_2)) == runs_expected_2){
optimal_lineup_final <- test_2[[2]]
} else{
optimal_lineup_final <- test_3[[2]]
}
test_1[[2]]
setwd("~/Projects/GT-Execution")
library(tidyverse)
setwd("~/Projects/GT-Execution/data")
files <- list.files()
data <- rbind(read_csv(files))
data <- read_csv(files[1])
data$calledLoc
cols <- names(data)
for(i in 2:length(files)){
data <- rbind(data, read_csv(i) %>% `names<-`(cols))
}
for(i in 2:length(files)){
data <- rbind(data, read_csv(files[i]) %>% `names<-`(cols))
}
View(data)
data$SpinAxis
data %>% pull(TaggedPitchType, SpinAxis)
data %>% select(TaggedPitchType, SpinAxis)
data %>% select(TaggedPitchType, SpinAxis) %>% group_by(TaggedPitchType) %>% summarise(avg = mean(SpinAxis))
data %>% select(TaggedPitchType, SpinAxis) %>% group_by(TaggedPitchType) %>% summarise(avg = mean(SpinAxis, na.rm = T))
unique(data$pitchert
)
unique(data$PitcherThrows
)
data <- data %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", HorzBreak = -HorzBreak),
pitch = case_when(InducedVertBreak > 0 & InducedVertBreak > abs(HorzBreak) ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak > 0, "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data <- data %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & InducedVertBreak > abs(HorzBreak) ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak > 0, "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data <- data %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & InducedVertBreak > abs(HorzBreak) ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak > 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data %>%
group_by(pitch) %>%
summarise(count = n())
data <- data %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & InducedVertBreak > abs(HorzBreak) ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data %>%
group_by(pitch) %>%
summarise(count = n())
View(data)
data %>% filter(is.na(pitch))
data %>% filter(is.na(pitch)) %>% view
data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & InducedVertBreak > abs(HorzBreak) ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data %>%
group_by(pitch) %>%
summarise(count = n())
data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data %>%
group_by(pitch) %>%
summarise(count = n())
data %>% filter(is.na(pitch)) %>% view
View(data)
data %>% filter(pitch == "Riseball") %>% view
data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & abs(HorzBreak) < 2 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data %>%
group_by(pitch) %>%
summarise(count = n())
data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch))
data %>%
group_by(pitch) %>%
summarise(count = n())
hist(data %>% filter(pitch == "Riseball") %>% pull(InducedVertBreak))
hist(data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak))
data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
hist(data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak))
hist(data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak))
data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak)
library(tidyverse)
files <- list.files()
data <- read_csv(files[1])
cols <- names(data)
for(i in 2:length(files)){
data <- rbind(data, read_csv(files[i]) %>% `names<-`(cols))
}
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup() %>%
mutate(pitch = case_when(pitch == "Riseball" & InducedVertBreak > 5 ~ "Good Riseball",
pitch == "Riseball" ~ "Bad Riseball"))
upd_data %>%
group_by(pitch) %>%
summarise(count = n())
data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak)
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak)
upd_data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak)
library(tidyverse)
files <- list.files()
data <- read_csv(files[1])
cols <- names(data)
for(i in 2:length(files)){
data <- rbind(data, read_csv(files[i]) %>% `names<-`(cols))
}
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & InducedVertBreak > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
upd_data$pitch
table(upd_data$pitch)
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 ~ "Riseball",
InducedVertBreak < 0 & abs(InducedVertBreak) > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
table(upd_data$pitch)
ggplot(upd_data, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & abs(HorzBreak) < 5 ~ "Riseball",
InducedVertBreak < 0 & abs(InducedVertBreak) > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
table(upd_data$pitch)
ggplot(upd_data, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
ggplot(upd_data %>% filter(pitch == "Screwball"), aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
upd_data %>% filter(pitch == "Screwball") %>% view
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed)
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Left", -HorzBreak, HorzBreak),
pitch = case_when(InducedVertBreak > 0 & abs(HorzBreak) < 5 ~ "Riseball",
InducedVertBreak < 0 & abs(InducedVertBreak) > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
upd_data %>% filter(pitch == "Screwball") %>% view
upd_data %>% filter(pitch == "Screwball") %>% pull(HorzBreak)
upd_data %>% filter(pitch == "Screwball") %>% drop_na(HorzBreak) %>% pull(HorzBreak)
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse(PitcherThrows == "Right" | is.na(PitcherThrows), HorzBreak, -HorzBreak),
pitch = case_when(InducedVertBreak > 0 & abs(HorzBreak) < 5 ~ "Riseball",
InducedVertBreak < 0 & abs(InducedVertBreak) > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
ggplot(upd_data %>% filter(pitch == "Screwball"), aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
upd_data %>% filter(pitch == "Screwball") %>% pull(HorzBreak)
upd_data %>% filter(pitch == "Screwball") %>% view
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse((PitcherThrows == "Right" | is.na(PitcherThrows)) & !(Pitcher %in% c("Emma Minghini", "Alyssa Faircloth")), HorzBreak, -HorzBreak),
pitch = case_when(InducedVertBreak > 0 & abs(HorzBreak) < 5 ~ "Riseball",
InducedVertBreak < 0 & abs(InducedVertBreak) > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
upd_data %>% filter(pitch == "Screwball") %>% view
upd_data <- data %>%
drop_na(HorzBreak, InducedVertBreak, RelSpeed) %>%
mutate(HorzBreak = ifelse((PitcherThrows == "Right" | is.na(PitcherThrows)) & !(Pitcher %in% c("Emma Minghini", "Alyssa Faircloth", "Makayla Coffield")), HorzBreak, -HorzBreak),
pitch = case_when(InducedVertBreak > 0 & abs(HorzBreak) < 5 ~ "Riseball",
InducedVertBreak < 0 & abs(InducedVertBreak) > abs(HorzBreak) ~ "Dropball",
HorzBreak < 0 ~ "Curveball",
TRUE ~ "Screwball")) %>%
group_by(Pitcher) %>%
mutate(pitch = ifelse(RelSpeed < max(RelSpeed) - 10, "Changeup", pitch)) %>%
ungroup()
ggplot(upd_data, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
upd_data %>%
group_by(pitch) %>%
summarise(count = n())
hist(upd_data %>% filter(pitch == "Dropball"))
hist(upd_data %>% filter(pitch == "Dropball") %>% pull(HorzBreak))
hist(upd_data %>% filter(pitch == "Dropball") %>% pull(InducedVertBreak))
hist(upd_data %>% filter(pitch == "Curveball") %>% pull(HorzBreak))
final_data <- upd_data %>%
mutate(pitch = case_when(pitch == "Riseball" & InducedVertBreak > 5 ~ "Good Riseball",
pitch == "Riseball" ~ "Bad Riseball",
pitch == "Dropball" & InducedVertBreak < -8 ~ "Good Dropball",
pitch == "Dropball" ~ "Bad Dropball",
pitch == "Curveball" & HorzBreak < -6 ~ "Good Curveball",
pitch == "Curveball" ~ "Bad Curveball"))
ggplot(final_data, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
final_data <- upd_data %>%
mutate(pitch = case_when(pitch == "Riseball" & InducedVertBreak > 5 ~ "Good Riseball",
pitch == "Riseball" ~ "Bad Riseball",
pitch == "Dropball" & InducedVertBreak < -8 ~ "Good Dropball",
pitch == "Dropball" ~ "Bad Dropball",
pitch == "Curveball" & HorzBreak < -6 ~ "Good Curveball",
pitch == "Curveball" ~ "Bad Curveball",
pitch == "Changeup" ~ "Changeup",
TRUE ~ NA)) %>%
drop_na(pitch)
ggplot(final_data, aes(x = HorzBreak, y = InducedVertBreak)) +
geom_point(aes(color = pitch))
